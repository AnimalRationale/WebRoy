<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>WebRoy</title>
    <meta name="author" content="AnimalR">
    <link rel="stylesheet" href="css/style.css">
    <script src="https://cdn.firebase.com/js/client/2.4.2/firebase.js"></script>
    <script src="js/progressbar.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.3/jquery.min.js"></script>
</head>

<body>

    <script>
        var ref = new Firebase("https://firebaseio.com");
        ref.on("value", function(snapshot) {
            console.log(snapshot.val());
                // Read data for every device object
                snapshot.forEach(function(childSnapshot) {
                    var deviceID = childSnapshot.key();
                    console.log("Device ID: " + deviceID);
                    // childData contains actual battery data
                    var deviceData = childSnapshot.val();
                    console.log("Device name: " + deviceData.batteryDeviceName)
                    console.log("Battery Level: " + deviceData.batteryLevel);
                    // Adding letter to div ID - Progressbar.js can't recognize elements IDs starting with numerals
                    container = 'd' + deviceID;
                    console.log("Container: " + container);
                    $('body').append('<div id="' + container + '" class="progress-bar-container"></div>');
                    var bar = new ProgressBar.Circle(eval(container), {
                        color: '#FF8800',
                        // This has to be the same size as the maximum width to
                        // prevent clipping
                        strokeWidth: 4,
                        trailWidth: 4,
                        easing: 'easeInOut',
                        duration: 1600,
                        text: {
                            autoStyleContainer: false
                        },
                        from: { color: '#FF3300', width: 4 },
                        to: { color: '#0050FF', width: 4 },
                        // Set default step function for all animate calls
                        step: function(state, circle) {
                            circle.path.setAttribute('stroke', state.color);
                            circle.path.setAttribute('stroke-width', state.width);

                            var value = Math.round(circle.value() * 100);
                            if (value === 0) {
                                circle.setText('');
                            } else {
                                circle.setText(value);
                            }

                        }
                    });
                    bar.text.style.fontFamily = 'Helvetica, Arial, sans-serif';
                    bar.text.style.fontSize = '3rem';
                    bar.animate(deviceData.batteryLevel / 100);  // Number from 0.0 to 1.0
                });
            },
                function (errorObject) {
                    console.log("The read failed: " + errorObject.code);
            });
    </script>
</body>
</html>