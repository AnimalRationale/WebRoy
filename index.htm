<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>WebRoy</title>
    <meta name="author" content="AnimalR">
    <link rel="stylesheet" href="css/style.css">
    <script src="https://cdn.firebase.com/js/client/2.4.2/firebase.js"></script>
    <script src="js/progressbar.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.3/jquery.min.js"></script>
</head>

<body>
    <script>

        function drawBatteryLevelIndicator(container, batteryLevel) {
            var bar = new ProgressBar.Circle(eval(container), {
                color: '#FF8800',
                // This has to be the same size as the maximum width to
                // prevent clipping
                strokeWidth: 4,
                trailWidth: 4,
                easing: 'easeInOut',
                duration: 1600,
                text: {
                    autoStyleContainer: false
                },
                from: { color: '#FF3388', width: 4 },
                to: { color: '#0050FF', width: 4 },
                // Set default step function for all animate calls
                step: function(state, circle) {
                    circle.path.setAttribute('stroke', state.color);
                    circle.path.setAttribute('stroke-width', state.width);
                    var value = Math.round(circle.value() * 100);
                    if (value === 0) {
                        circle.setText('');
                    } else {
                        circle.setText(value + '%');
                    }
                }
            });
            bar.text.style.fontFamily = 'Helvetica, Arial, sans-serif';
            bar.text.style.fontSize = '1.5rem';
            bar.animate(batteryLevel / 100);  // Number from 0.0 to 1.0
        }

        function getChargingStatus(status) {
            if (status === 1) {
                return 'Charging';
            } else return 'Discharging';
        }

        function getTimeOfCheck(time) {
            timeNow = (new Date).getTime();
            if (time > timeNow || time <= 0) return 'Error';
            timeOfCheck = timeNow - time;

            const SECOND_IN_MILLIS = 1000;
            const MINUTE_IN_MILLIS = 60 * SECOND_IN_MILLIS;
            const HOUR_IN_MILLIS = 60 * MINUTE_IN_MILLIS;
            const DAY_IN_MILLIS = 24 * HOUR_IN_MILLIS;

            if (timeOfCheck < MINUTE_IN_MILLIS)
                timeOfCheckText = 'Checked now';
            else if (timeOfCheck < 60 * MINUTE_IN_MILLIS)
                timeOfCheckText = Math.round(timeOfCheck / MINUTE_IN_MILLIS) + 'min ago';
             else if (timeOfCheck < 24 * HOUR_IN_MILLIS)
                timeOfCheckText = Math.round(timeOfCheck / HOUR_IN_MILLIS) + 'h ago';
             else if (timeOfCheck < 48 * HOUR_IN_MILLIS)
                timeOfCheckText = 'Yesterday';
            else
                timeOfCheckText = Math.round(timeOfCheck / DAY_IN_MILLIS + 'days ago');

            return timeOfCheckText;
        }

        var ref = new Firebase("https://firebaseio.com");
        ref.on("value", function(snapshot) {
            console.log(snapshot.val());
            // Read data for every device object
            snapshot.forEach(function(childSnapshot) {
                var deviceID = childSnapshot.key();
                console.log("Device ID: " + deviceID);
                // childData contains battery data
                var deviceData = childSnapshot.val();
                console.log("Device name: " + deviceData.batteryDeviceCustomName)
                console.log("Battery Level: " + deviceData.batteryLevel);
                // Adding letter to div ID - Progressbar.js can't recognize elements IDs starting with numerals
                // (valid in HTML, not valid in CSS syntax)
                container = 'd' + deviceID;
                console.log("Container: " + container);
                if ($('#' + container).length) {
                    $('#' + container).empty();
                    console.log("Container " + container + " exists.");
                } else {
                    $('body').append('<div id="' + container + '" class="progress-bar-container"></div>');
                }
                drawBatteryLevelIndicator(container, deviceData.batteryLevel);
                console.log("Status: " + getChargingStatus(deviceData.batteryChargingStatus) + " / " + deviceData.batteryChargingStatus );
                $('#' + container).append('<span id="device-name-' + container + '" class="device-name" style="display: none;">'
                    + deviceData.batteryDeviceCustomName + '</span>');
                $('#' + container).append('<span id="charging-status-' + container + '" class="charging-status" style="display: none;">'
                + getChargingStatus(deviceData.batteryChargingStatus) + '</span>');
                $('#' + container).append('<span id="time-of-check-' + container + '" class="time-of-check" style="display: none;">'
                + getTimeOfCheck(deviceData.batteryCheckTime) + '</span>');
                $('#device-name-' + container).fadeIn(1200);
                $('#charging-status-' + container).fadeIn(1600);
                $('#time-of-check-' + container).fadeIn(1600);
            });
            },
            function (errorObject) {
                console.log("The read failed: " + errorObject.code);
            }
        );
    </script>
</body>
</html>